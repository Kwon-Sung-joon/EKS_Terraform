
#Create aws elb controller sa
kubectl create sa aws-load-balancer-controller -n kube-system
kubectl annotate serviceaccount -n kube-system aws-load-balancer-controller eks.amazonaws.com/role-arn=arn:aws:iam::672956273056:role/irsa_aws_load_balancer_controller

#Install elb
helm repo add eks https://aws.github.io/eks-charts
helm install aws-load-balancer-controller eks/aws-load-balancer-controller -n kube-system --set clusterName=dev_cluster_1 --set serviceAccount.create=false --set serviceAccount.name=aws-load-balancer-controller



#Create karpenter ns, sa
kubectl create ns karpenter
kubectl create sa karpenter -n karpenter
kubectl annotate karpenter -n kube-system karpenter eks.amazonaws.com/role-arn=arn:aws:iam::672956273056:role/irsa_karpenter_controller

#Install karpenter

aws iam create-instance-profile \
— instance-profile-name "dev_node_group_role"
aws iam add-role-to-instance-profile \
— instance-profile-name "dev_node_group_role" \
— role-name "dev_node_group_role"

helm repo add karpenter https://charts.karpenter.sh/
helm upgrade --install --namespace karpenter --create-namespace \
  karpenter karpenter/karpenter \
  --set serviceAccount.annotations.eks\.amazonaws\.com/role-arn=arn:aws:iam::672956273056:role/irsa_karpenter_controller \
  --set clusterName=dev_cluster_1 \
  --set clusterEndpoint=https://EAAC6F722E25BB2573846132E96F1A33.gr7.ap-northeast-2.eks.amazonaws.com \
  --set aws.defaultInstanceProfile=arn:aws:iam::672956273056:instance-profile/dev_node_group_role \
  --wait # for the defaulting webhook to install before creating a Provisioner

