apiVersion: v1
kind: Namespace
metadata:
  name: spring-app
---
apiVersion: v1
kind: Service
metadata:
  name: spring-app
  namespace: spring-app
spec:
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
  type: ClusterIP
  selector:
    app: spring-app
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-app
  namespace: spring-app
spec:
  selector:
    matchLabels:
      app: spring-app
  replicas: 1
  template:
    metadata:
      labels:
        app: spring-app
    spec:
      containers:
        - image: 672956273056.dkr.ecr.ap-northeast-2.amazonaws.com/ksj-apps:spring-8080-x64-v2
          imagePullPolicy: Always
          name: spring-app
          ports:
            - containerPort: 8080
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - spring-app
              topologyKey: "kubernetes.io/hostname"
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              preference:
                matchExpressions:
                  - key: karpenter.sh/nodepool
                    operator: In
                    values:
                      - dev-private-node
            - weight: 100
              preference:
                matchExpressions:
                  - key: karpenter.sh/nodepool
                    operator: In
                    values:
                      - dev-public-node
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: spring-app
  namespace: spring-app
  annotations:
    alb.ingress.kubernetes.io/load-balancer-name: public-alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/subnets: dev-public-1, dev-public-2
    alb.ingress.kubernetes.io/healthcheck-path: /actuator/health
    alb.ingress.kubernetes.io/group.name: spring-8080
spec:
  ingressClassName: alb
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: spring-app
                port:
                  number: 8080
